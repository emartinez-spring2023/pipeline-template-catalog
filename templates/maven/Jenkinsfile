library 'pipeline-library'
pipeline {
  agent none
  options {
   timeout(time: 10, unit: 'MINUTES') 
  }
  stages {
        stage ('Build and Analysis') {
          when {
            beforeAgent true
            anyOf {
              branch 'main'
              branch 'pr-*'
            }
          }
          steps {
            customYamlProps()
            echo "jdk from cloudbee-ci.yml: ${jdk}"
            echo "line coverage from cloudbees-ci.yml: ${lineCoverage}"
            container ('maven') {
              sh 'mvn -Duser.home=/var/maven -V -q -e clean verify -Dmaven.test.failure.ignore'
            }
          }
          post {
            always {
              step([$class: 'JacocoPublisher', 
                changeBuildStatus: true,
                minimumLineCoverage: '${lineCoverage}',
                runAlways: true
              ])
              recordIssues enabledForFailure: true,  tools: [java(), javaDoc()], aggregatingResults: 'true', id: 'java', name: 'Java'
              recordIssues enabledForFailure: true, tool: errorProne(), healthy: 1, unhealthy: 20
              recordIssues enabledForFailure: true, tools: [pmdParser(pattern: 'target/pmd.xml'),
                spotBugs(pattern: 'target/spotbugsXml.xml')],
                 qualityGates: [[threshold: 1, type: 'TOTAL', unstable: true]]
              recordIssues enabledForFailure: true, tools: [checkStyle(pattern: 'target/checkstyle-result.xml'),
                cpd(pattern: 'target/cpd.xml')]
            }
          }
        }
        stage ('Test') {
          when {
            anyOf {
              branch 'main'
              branch 'pr-*'
            }
          }
          steps {
             container ('maven') {
               sh 'mvn -Duser.home=/var/maven -q test'
             }
          }
          post {
            always {
              junit 'target/surefire-reports/*.xml'
            }
          }
        }
  }
}
